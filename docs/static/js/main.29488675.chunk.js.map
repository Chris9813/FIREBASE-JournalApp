{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNOtes.js","types/types.js","actions/notes.js","components/hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","components/auth/LoginScreen.js","actions/ui.js","components/auth/RegisterScreen.js","routers/DeshBoardPublicRuters.js","routers/RouterApp.js","components/reducers/uiReducer.js","components/reducers/notesReducer.js","store/store..js","components/reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","console","log","loadNOtes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNOte","startLoadingNotes","dispatch","setNote","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","noteLogout","useForm","initialState","useState","values","setvalues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpLoading","onClick","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","height","delete","startDeleting","NothingSelected","login","displayname","logout","startLoading","finishLoading","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","nameSort","split","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","location","pathname","localStorage","setItem","LoginScreen","loading","ui","email","password","formValues","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","displayName","catch","message","startLoginEmailPaswword","disabled","signInWithPopup","setError","err","RegisterScreen","msgError","password2","handleRegister","isFormValid","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","trim","length","validator","isEmail","DeshBoardPublicRuters","exact","path","RouterApp","checking","setchecking","setisLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.29488675.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\n\r\n    firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    })\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\n\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n\r\n","\r\nexport const fileUpload = async(file) => {\r\n\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/ds8xt9gq9/upload\";\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\",\"react-journal\")\r\n    formData.append(\"file\",file)\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n\r\n        if(resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else{\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\n\r\nexport const loadNOtes = async (uid) => {\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n    \r\n    notesSnap.forEach(snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data(),\r\n        })\r\n    })\r\n    return notes\r\n}\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n\r\nexport const types = {\r\n    login: \"[Auth] Login\",\r\n    logout: \"[Auth] Logout\",\r\n\r\n    uiSetError: \"[UI] Set Error\",\r\n    uiRemoveError: \"[UI] Remove Error\",\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: \"[Notes] New note\",\r\n    notesActive: \"[Notes] New set active note\",\r\n    notesLoad: \"[Notes] Load note\",\r\n    notesUpdated: \"[Notes] Updated note\",\r\n    notesFileUrl: \"[Notes] Updated img url\",\r\n    notesDelete: \"[Notes] Delete note\",\r\n    notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n    \r\n\r\n}","import Swal from \"sweetalert2\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNOtes } from \"../helpers/loadNOtes\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n        const newNote = {\r\n            title: \"\",\r\n            body: \"\",\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n        dispatch(activeNote(doc.id, newNote))\r\n        dispatch(addNewNOte(doc.id, newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n    \r\n})\r\n\r\nexport const addNewNOte = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNOtes(uid);\r\n        dispatch(setNote(notes))\r\n    }\r\n}\r\n\r\n\r\nexport const setNote = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const {uid} = getState().auth\r\n\r\n        if(!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = {...note}\r\n        delete noteToFirestore.id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire(\"Saved\", note.title, \"success\")\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUpLoading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        const {active:activeNote} = getState().notes\r\n        Swal.fire({\r\n            title: \"uploading...\",\r\n            text: \"please wait...\",\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        })\r\n        const fileUrl = await fileUpload(file)\r\n        activeNote.url = fileUrl\r\n        dispatch(startSaveNote(activeNote))\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n            await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n            dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\n\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setvalues] = useState(initialState)\r\n    const reset = (newFormState = initialState) => {\r\n        setvalues(newFormState)\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n\r\n} ","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUpLoading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active))\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector(\"#fileSelector\").click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]\r\n        if(file) {\r\n            dispatch(startUpLoading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes_appbar\">\r\n            <span>13 de agosto 1998</span>\r\n\r\n            <input \r\n            id=\"fileSelector\"\r\n                type=\"file\"\r\n                style={{display: \"none\"}}\r\n                onChange={handleFileChange}\r\n                name=\"file\"\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\"\r\n                onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn\"\r\n                onClick={handleSave}\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\nimport { useForm } from '../hooks/useForm'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {active:note} = useSelector(state => state.notes)\r\n    const [values, handleInputChange, reset] = useForm(note)\r\n    \r\n    const {body, title, id} = values\r\n\r\n    const activeId = useRef( note.id )\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id, {...values}))\r\n        \r\n    }, [values, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes_main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes_content\">\r\n                <input \r\n                type=\"text\"\r\n                placeholder=\"Another awsome title\"\r\n                className=\"notes_title-input\"\r\n                autoComplete=\"off\"\r\n                value = {title}\r\n                onChange = {handleInputChange}\r\n                name=\"title\"\r\n                />\r\n\r\n                <textarea\r\n                placeholder=\"What happened today\"\r\n                className=\"notes_textarea\"\r\n                value={body}\r\n                onChange={handleInputChange}\r\n                name=\"body\"\r\n                >\r\n                </textarea>\r\n\r\n                {\r\n                note.url &&\r\n                <div className=\"notes_image\">\r\n                    <img \r\n                    src={note.url}\r\n                    alt=\"Imagen\"\r\n                    height= \"150px\"\r\n                    />\r\n                </div>\r\n                }\r\n            </div>\r\n            <button className=\"btn btn-danger\"\r\n            onClick={handleDelete}\r\n            >\r\n                    Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing_main-content\">\r\n            <p>Select something \r\n            <br/>\r\n            or create an entry!\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./notes\";\r\n\r\nexport const startLoginEmailPaswword = (email, password) => {\r\n    \r\n    return (dispatch) => {\r\n        dispatch(startLoading())\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then(({user}) => {\r\n            dispatch(login(user.uid, user.displayName))\r\n            dispatch(finishLoading())\r\n        }).catch(e => {\r\n            console.log(e);\r\n            dispatch(finishLoading())\r\n            Swal.fire(\"Error\", e.message, \"error\")\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(async({user}) => {\r\n            await user.updateProfile({displayName: name});\r\n            dispatch(login(user.uid, user.displayName));\r\n            \r\n        }).catch(e => {\r\n            console.log(e);\r\n            Swal.fire(\"Error\", e.message, \"error\");\r\n        })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n        .then(({user}) => {\r\n            dispatch(login(user.uid, user.displayName));\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayname) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayname,\r\n        }\r\n    })\r\n\r\n\r\n    export const startLogout = () => {\r\n        return async(dispatch) => {\r\n            await firebase.auth().signOut()\r\n            dispatch(logout())\r\n            dispatch(noteLogout())\r\n        }\r\n    }\r\n\r\n    export const logout = () => ({\r\n        type: types.logout\r\n    })\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n})\r\n","import React from 'react'\r\nimport moment from \"moment\"\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date)\r\n    \r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id, {\r\n            date, title, body, url\r\n        }));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"journal_entry pointer animate__animated animate__fadeIn animate__faster\"\r\n        onClick={handleEntryClick}\r\n        >\r\n\r\n            {\r\n                (url) \r\n                    &&\r\n                <div className=\"journal_entry-picture\"\r\n            style={\r\n                {\r\n                    backgroundSize: \"cover\",\r\n                    backgroundImage: `url(${url})`,                  \r\n                    \r\n                }\r\n            }\r\n            ></div>\r\n            }\r\n\r\n            <div className=\"journal_entry-body\"\r\n            \r\n            >\r\n                <p className=\"journal_entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal_entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal_entry-date-box\">\r\n                <span>{noteDate.format(\"dddd\")}</span>\r\n                <h4>{noteDate.format(\"Do\")}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const {notes} = useSelector(state => state.notes)\r\n    \r\n\r\n    return (\r\n        <div className=\"journal_entries \">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                    key ={note.id} \r\n                    {...note}\r\n                    \r\n                    />\r\n                ))\r\n                \r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { noteLogout, startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(noteLogout());\r\n    }\r\n    \r\n    const {name} = useSelector(state => state.auth)\r\n    const nameSort = name.split(\" \")[0]\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal_sidebar\">\r\n            <div className = \"journal_sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className =\"far fa-moon\"></i>\r\n                    <span>{nameSort}</span>\r\n                </h3>\r\n                <button\r\n                className=\"btn\"\r\n                onClick={handleLogout}\r\n                >Logout</button>\r\n                \r\n            </div>\r\n            <div className=\"journal_new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n            <p\r\n            className=\"mt-5\"\r\n            >New entry</p>\r\n            </div>\r\n            <JournalEntries />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal_main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n            {\r\n                (active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (!isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    console.log(rest.location.pathname);\r\n    localStorage.setItem(\"lastPath\", rest.location.pathname)\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/auth\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPaswword } from '../../actions/auth'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    const [formValues, handleInputChange ] = useForm({\r\n        email: \"chris9813@gmail.com\",\r\n        password: \"123456\"\r\n    });\r\n\r\n    const {email, password} = formValues\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n        dispatch( startLoginEmailPaswword(email, password ));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"auth_main\">\r\n            <div className=\"auth_box-container\">\r\n            <h3 className =\"auth_title\">Login</h3>\r\n            <form onSubmit={handleLogin}\r\n            className= \"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                <input\r\n                className=\"aut_input\"\r\n                type=\"text\"\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                value = {email}\r\n                onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                className=\"aut_input\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                type=\"submit\"\r\n                className = \"btn btn-primary btn-block\"\r\n                disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n\r\n        <div className=\"auth_social-networks\">\r\n            <p>Login with social networks</p>\r\n            \r\n            \r\n            <div \r\n                className=\"google-btn\"\r\n                onClick= {handleGoogleLogin}\r\n            >\r\n                <div className=\"google-icon-wrapper\">\r\n                    <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                </div>\r\n                <p className=\"btn-text\">\r\n                    <b>Sign in with google</b>\r\n                </p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <Link \r\n        className=\"link\"\r\n        to = \"/auth/register\">\r\n            create new account\r\n        </Link>\r\n        </form>\r\n            </div>\r\n            \r\n    </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err,\r\n})\r\n\r\nexport const remError = (err) => ({\r\n    type: types.uiRemoveError,\r\n})\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../hooks/useForm'\r\nimport validator from \"validator\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { remError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {msgError} = useSelector(state => state.ui)\r\n\r\n\r\n    const[values, handleInputChange] = useForm({\r\n        name: \"Chris\",\r\n        email: \"chris9813@gmail.com\",\r\n        password: \"123456\",\r\n        password2: \"123456\",\r\n    })\r\n    \r\n    const {name, email, password, password2} = values\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if(isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n            if(name.trim().length === 0){\r\n                dispatch(setError(\"Name is Required\"))\r\n                return false\r\n            } else if (!validator.isEmail(email)) {\r\n                dispatch(setError(\"Email Incorrect\"))\r\n                return false\r\n            } else if (password !== password2 || password.length < 5) {\r\n                dispatch(setError(\"password Incorrect\"))\r\n                return false\r\n            }\r\n        dispatch(remError(\"\"))\r\n        return true\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"auth_main\">\r\n            <div className=\"auth_box-container\">\r\n            <div className= \"animate__animated animate__fadeIn animate__faster\">\r\n            <h3 className =\"auth_title\">Register</h3>\r\n            <form onSubmit = {handleRegister}>\r\n\r\n            {\r\n            msgError && \r\n            (<div className=\"auth_alert-error\">\r\n            {msgError}\r\n            </div>)\r\n            }\r\n\r\n            <input\r\n                className=\"aut_input\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n                value={email}\r\n                />\r\n\r\n                <input\r\n                className=\"aut_input\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n                value={name}\r\n                />\r\n\r\n                <input\r\n                className=\"aut_input\"\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                name=\"password\"\r\n                onChange={handleInputChange}\r\n                value={password}\r\n                />\r\n\r\n                <input\r\n                className=\"aut_input\"\r\n                type=\"password\"\r\n                placeholder=\"password2\"\r\n                name=\"password2\"\r\n                onChange={handleInputChange}\r\n                value={password2}\r\n                />\r\n\r\n                <button\r\n                type=\"submit\"\r\n                className = \"btn btn-primary btn-block\"\r\n                onClick={handleRegister}\r\n                >\r\n                    Register\r\n                </button>\r\n        <Link \r\n        className=\"link\"\r\n        to = \"/auth/login\">\r\n            Already register\r\n        </Link>\r\n        </form>\r\n    </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const DeshBoardPublicRuters = () => {\r\n    return (\r\n        <div>\r\n    <Switch>\r\n    <Route exact path = \"/auth/login\" component = {LoginScreen}/>\r\n    <Route exact path = \"/auth/register\" component = {RegisterScreen}/>\r\n    <Redirect to =\"/auth/login\"/>\r\n    </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport {firebase} from '../firebase/firebase-config'\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { DeshBoardPublicRuters } from './DeshBoardPublicRuters';\r\nimport {startLoadingNotes } from '../actions/notes';\r\n\r\nexport const RouterApp = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [checking, setchecking] = useState(true);\r\n    const [isLoggedIn, setisLoggedIn] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) =>{\r\n            if(user?.uid) {\r\n                dispatch(login(user.uid, user.displayName))\r\n                setisLoggedIn(true)\r\n                dispatch(startLoadingNotes(user.uid))\r\n            } else {\r\n                setisLoggedIn(false)\r\n            }\r\n            setchecking(false)\r\n        })\r\n    }, [dispatch, setchecking, setisLoggedIn])\r\n\r\n\r\n\r\nif(checking) {\r\n    return(\r\n        <h1>Wait...</h1>\r\n    )\r\n}\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                    <PublicRoute path = \"/auth\" component = {DeshBoardPublicRuters}\r\n                    isLoggedIn = {isLoggedIn}\r\n                    />\r\n                    <PrivateRoute exact  path=\"/\" component={JournalScreen}\r\n                    isLoggedIn = {isLoggedIn}\r\n                    />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null,\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        \r\n            case types.uiFinishLoading:\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../../types/types\";\r\n\r\n/*\r\n{\r\n    notes: []\r\n    active: null,\r\n    active: {\r\n        id: \"qwe\"\r\n        title: \"\",\r\n        body: \"\",\r\n        imageUrl: \"\",\r\n        date: 123\r\n    }\r\n}\r\n\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n            case types.notesAddNew:\r\n                return {\r\n                    ...state,\r\n                    notes: [action.payload, ...state.notes]\r\n                }\r\n\r\n            case types.notesLoad:\r\n                return {\r\n                    ...state,\r\n                    notes: [...action.payload]\r\n                }\r\n\r\n            case types.notesUpdated:\r\n                return {\r\n                    ...state,\r\n                    notes: state.notes.map(\r\n                        note => note.id === action.payload.id\r\n                            ? action.payload.note\r\n                            :note\r\n                    )\r\n                }\r\n            case types.notesDelete:\r\n                return {\r\n                    ...state,\r\n                    active: null,\r\n                    notes: state.notes.filter(note => note.id !== action.payload)\r\n                }\r\n\r\n            case types.notesLogoutCleaning:\r\n                return{\r\n                    ...state,\r\n                    active: null,\r\n                    notes: [],\r\n                }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n\r\n}","import thunk from 'redux-thunk'\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { authReducer } from '../components/reducers/authReducer'\r\nimport { uiReducer } from '../components/reducers/uiReducer';\r\nimport { notesReducer } from '../components/reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n})\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    )\r\n","import { types } from \"../../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case types.login:\r\n            \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayname\r\n            }\r\n            case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { RouterApp } from './routers/RouterApp'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store.';\r\n\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n\r\n    return (\r\n        <Provider store = {store}>\r\n            <div>\r\n                <RouterApp />\r\n            </div>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport \"../src/styles/styles.scss\"\n\nReactDOM.render(\n\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}